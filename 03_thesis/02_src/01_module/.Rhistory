newsalud$C2P24 <- relevel(newsalud$C2P24, ref = "No")
newsalud$C2P25 <- relevel(newsalud$C2P25, ref = "No")
newsalud$C2P26 <- relevel(newsalud$C2P26, ref = "No")
## Generating separated physicians and nurses data
newsalud <- subset(newsalud, select = -c(C2P28))
newsalud_med <- newsalud[newsalud$C2P1 == "M?dico",]
newsalud_med <- subset(newsalud_med, select = -C2P1)
newsalud_enf <- newsalud[newsalud$C2P1 != "M?dico",]
newsalud_enf <- subset(newsalud_enf, select = -C2P1)
## Scaling
newsalud_med$li <- newsalud_med$li;
newsalud_med$lf <- newsalud_med$lf
newsalud_enf$li <- newsalud_enf$li
newsalud_enf$lf <- newsalud_enf$lf
newsalud_enf <- subset(newsalud_enf, (newsalud_enf$lf == Inf) == FALSE)
newsalud_enf <- dplyr::mutate(newsalud_enf,
sexo = if_else(newsalud_enf$C2P4 == "Mujer", 1, 0)
)
newsalud_enf <- newsalud_enf %>% dplyr::select(C2P21,C2P27,C2P9,sexo, li,lf)
newsalud_enf$sexo <- as.factor(newsalud_enf$sexo)
return(newsalud_enf)
}
#### Datos reales ####
real_data = lancet()
tau_seq_sim = seq(0.15,0.9,0.15)
m1 = gamlss(Surv(li,lf,type="interval2")~.,family = WEI3ic,data = real_data)
init_real = as.vector(c(coef(m1),m1$sigma.coefficients));init_real
var = list()
for (j in 1:length(tau_seq_sim)) {
var = append(var,list(reg_Wr(data = real_data,li = 5, lf= 6,tau_seq_sim[j],param = init_real)))
}
var
val <- matrix(ncol=length(var[[1]]$par),nrow = 0)
for (l in 1:length(tau_seq_sim)) {
pba <- var[[l]]
val <- rbind(val,pba$par)
}
val
load("C:/Users/jaman/Dropbox/MSc-Tesis-PUCP/03_thesis/02_src/03_simulation/03_simulation_workspace_final.RData")
library(gamlss)
library(gamlss.cens)
library(haven)
library(tidyverse)
library(BB)
library(matrixStats)
library(gridExtra)
library(numDeriv)
library(pracma)
library(ucminf)
library(nloptr)
gen.cens(family="WEI3",type="interval")
X = c(100,500,1000)
par(mfrow=c(5,9))
par(mar=c(3,3,3,3))
title = c("\U003B2_0","\U003B2_1","\U003B2_2","\U003B2_3","\U003B1")
for (i in 1:length(t_sim)) {
for (j in 5) {
Y = rbind(final_database[i,j],final_database[i+9,j],final_database[i+18,j])
plot(y= Y, x = X, pch=16,xlab = "Tamaño de muestra",ylab = "Cobertura",xaxt='n',cex.lab=1)
lines(y=Y,x=X,type="b", col="firebrick", lty=2)
axis(4, at=Y,labels=round(Y,digits=3), col.axis="firebrick", cex.axis=0.9, tck=.01)
axis(1,at=c(100,500,1000))
title(paste(title[j],", \U003C4 =", tau_sim[i]))
}
}
L = 5000
n = c(100,500,1000)
betas_sim = c(7,0.3,0.84,2.5)
alpha_sim = 2
tau_sim = seq(0.1,0.9,0.1)
X = c(100,500,1000)
par(mfrow=c(5,9))
par(mar=c(3,3,3,3))
title = c("\U003B2_0","\U003B2_1","\U003B2_2","\U003B2_3","\U003B1")
for (i in 1:length(t_sim)) {
for (j in 5) {
Y = rbind(final_database[i,j],final_database[i+9,j],final_database[i+18,j])
plot(y= Y, x = X, pch=16,xlab = "Tamaño de muestra",ylab = "Cobertura",xaxt='n',cex.lab=1)
lines(y=Y,x=X,type="b", col="firebrick", lty=2)
axis(4, at=Y,labels=round(Y,digits=3), col.axis="firebrick", cex.axis=0.9, tck=.01)
axis(1,at=c(100,500,1000))
title(paste(title[j],", \U003C4 =", tau_sim[i]))
}
}
t_sim = tau_sim
for (i in 1:length(t_sim)) {
for (j in 5) {
Y = rbind(final_database[i,j],final_database[i+9,j],final_database[i+18,j])
plot(y= Y, x = X, pch=16,xlab = "Tamaño de muestra",ylab = "Cobertura",xaxt='n',cex.lab=1)
lines(y=Y,x=X,type="b", col="firebrick", lty=2)
axis(4, at=Y,labels=round(Y,digits=3), col.axis="firebrick", cex.axis=0.9, tck=.01)
axis(1,at=c(100,500,1000))
title(paste(title[j],", \U003C4 =", tau_sim[i]))
}
}
final_database
se_calc <- function(lista) {
ic_contain <- matrix(nrow=0,ncol=5)
for (k in 1:length(lista)) {
little_t <- lista[[k]]
ic <- rbind( little_t$par - qnorm(0.975) * sqrt(diag(solve(little_t$hessian))),
little_t$par + qnorm(0.975) * sqrt(diag(solve(little_t$hessian))))
ic_contain <- rbind(ic_contain,cbind(between(betas_sim[1],left = ic[1,1],right = ic[2,1]),
between(betas_sim[2],left = ic[1,2],right = ic[2,2]),
between(betas_sim[3],left = ic[1,3],right = ic[2,3]),
between(betas_sim[4],left = ic[1,4],right = ic[2,4]),
between(alpha_sim,left = ic[1,5],right = ic[2,5])))
}
final_df <- as.matrix(t(colSums(ic_contain)/length(lista)))
return(final_df)
}
final_database <- matrix(nrow=0,ncol=5)
seq_t <- seq(1,8,1);seq_t
for (j in 1:length(n)) {
df <- sim_list[[j]]
actual_t <- df[1:5000*seq_t[1]]
vf_df <- se_calc(actual_t)
rownames(vf_df) <- paste("n_",n[j],sep="")
final_database <- rbind(final_database,vf_df)
for (l in 1:length(seq_t)) {
actual_t <-  df[(5000*seq_t[l]+1):(5000*(seq_t[l]+1))]
vf_df <- se_calc(actual_t)
rownames(vf_df) <- paste("n_",n[j],sep="")
final_database <- rbind(final_database,vf_df)
}
}
final_database
X = c(100,500,1000)
par(mfrow=c(5,9))
par(mar=c(3,3,3,3))
title = c("\U003B2_0","\U003B2_1","\U003B2_2","\U003B2_3","\U003B1")
t_sim = tau_sim
for (i in 1:length(t_sim)) {
for (j in 5) {
Y = rbind(final_database[i,j],final_database[i+9,j],final_database[i+18,j])
plot(y= Y, x = X, pch=16,xlab = "Tamaño de muestra",ylab = "Cobertura",xaxt='n',cex.lab=1)
lines(y=Y,x=X,type="b", col="firebrick", lty=2)
axis(4, at=Y,labels=round(Y,digits=3), col.axis="firebrick", cex.axis=0.9, tck=.01)
axis(1,at=c(100,500,1000))
title(paste(title[j],", \U003C4 =", tau_sim[i]))
}
}
plot
X = c(100,500,1000)
par(mfrow=c(5,9))
par(mar=c(3,3,3,3))
title = c("\U003B2_0","\U003B2_1","\U003B2_2","\U003B2_3","\U003B1")
t_sim = tau_sim
for (i in 1:length(t_sim)) {
for (j in 1) {
Y = rbind(final_database[i,j],final_database[i+9,j],final_database[i+18,j])
plot(y= Y, x = X, pch=16,xlab = "Tamaño de muestra",ylab = "Cobertura",xaxt='n',cex.lab=1,ylim = c(0.90,1))
lines(y=Y,x=X,type="b", col="firebrick", lty=2)
axis(4, at=Y,labels=round(Y,digits=3), col.axis="firebrick", cex.axis=0.9, tck=.01)
axis(1,at=c(100,500,1000))
title(paste(title[j],", \U003C4 =", tau_sim[i]))
}
}
X = c(100,500,1000)
par(mfrow=c(5,9))
par(mar=c(3,3,3,3))
title = c("\U003B2_0","\U003B2_1","\U003B2_2","\U003B2_3","\U003B1")
t_sim = tau_sim
for (i in 1:length(t_sim)) {
for (j in 1) {
Y = rbind(final_database[i,j],final_database[i+9,j],final_database[i+18,j])
plot(y= Y, x = X, pch=16,xlab = "Tamaño de muestra",ylab = "Cobertura",xaxt='n',cex.lab=1,ylim = c(0.925,1))
lines(y=Y,x=X,type="b", col="firebrick", lty=2)
axis(4, at=Y,labels=round(Y,digits=3), col.axis="firebrick", cex.axis=0.9, tck=.01)
axis(1,at=c(100,500,1000))
title(paste(title[j],", \U003C4 =", tau_sim[i]))
}
}
X = c(100,500,1000)
par(mfrow=c(5,9))
par(mar=c(3,3,3,3))
title = c("\U003B2_0","\U003B2_1","\U003B2_2","\U003B2_3","\U003B1")
t_sim = tau_sim
for (i in 1:length(t_sim)) {
for (j in 1) {
Y = rbind(final_database[i,j],final_database[i+9,j],final_database[i+18,j])
plot(y= Y, x = X, pch=16,xlab = "Tamaño de muestra",ylab = "Cobertura",xaxt='n',cex.lab=1,ylim = c(0.90,1))
lines(y=Y,x=X,type="b", col="firebrick", lty=2)
axis(4, at=Y,labels=round(Y,digits=3), col.axis="firebrick", cex.axis=0.9, tck=.01)
axis(1,at=c(100,500,1000))
title(paste(title[j],", \U003C4 =", tau_sim[i]))
}
}
for (i in 1:length(t_sim)) {
for (j in 2) {
Y = rbind(final_database[i,j],final_database[i+9,j],final_database[i+18,j])
plot(y= Y, x = X, pch=16,xlab = "Tamaño de muestra",ylab = "Cobertura",xaxt='n',cex.lab=1,ylim = c(0.90,1))
lines(y=Y,x=X,type="b", col="firebrick", lty=2)
axis(4, at=Y,labels=round(Y,digits=3), col.axis="firebrick", cex.axis=0.9, tck=.01)
axis(1,at=c(100,500,1000))
title(paste(title[j],", \U003C4 =", tau_sim[i]))
}
}
for (i in 1:length(t_sim)) {
for (j in 3) {
Y = rbind(final_database[i,j],final_database[i+9,j],final_database[i+18,j])
plot(y= Y, x = X, pch=16,xlab = "Tamaño de muestra",ylab = "Cobertura",xaxt='n',cex.lab=1,ylim = c(0.90,1))
lines(y=Y,x=X,type="b", col="firebrick", lty=2)
axis(4, at=Y,labels=round(Y,digits=3), col.axis="firebrick", cex.axis=0.9, tck=.01)
axis(1,at=c(100,500,1000))
title(paste(title[j],", \U003C4 =", tau_sim[i]))
}
}
for (i in 1:length(t_sim)) {
for (j in 4) {
Y = rbind(final_database[i,j],final_database[i+9,j],final_database[i+18,j])
plot(y= Y, x = X, pch=16,xlab = "Tamaño de muestra",ylab = "Cobertura",xaxt='n',cex.lab=1,ylim = c(0.90,1))
lines(y=Y,x=X,type="b", col="firebrick", lty=2)
axis(4, at=Y,labels=round(Y,digits=3), col.axis="firebrick", cex.axis=0.9, tck=.01)
axis(1,at=c(100,500,1000))
title(paste(title[j],", \U003C4 =", tau_sim[i]))
}
}
for (i in 1:length(t_sim)) {
for (j in 5) {
Y = rbind(final_database[i,j],final_database[i+9,j],final_database[i+18,j])
plot(y= Y, x = X, pch=16,xlab = "Tamaño de muestra",ylab = "Cobertura",xaxt='n',cex.lab=1,ylim = c(0.90,1))
lines(y=Y,x=X,type="b", col="firebrick", lty=2)
axis(4, at=Y,labels=round(Y,digits=3), col.axis="firebrick", cex.axis=0.9, tck=.01)
axis(1,at=c(100,500,1000))
title(paste(title[j],", \U003C4 =", tau_sim[i]))
}
}
ecm_calc <- function(lista) {
ic_contain <- matrix(nrow=0,ncol=5)
for (k in 1:length(lista)) {
little_t <- lista[[k]]
ecm <- (little_t$par - c(betas_sim,alpha_sim))**2
ic_contain <- rbind(ic_contain,ecm)
}
final_df <- as.matrix(t(colSums(ic_contain)/length(lista)))
return(final_df)
}
final_database <- matrix(nrow=0,ncol=5)
seq_t <- seq(1,8,1);seq_t
for (j in 1:length(n)) {
df <- sim_list[[j]]
actual_t <- df[1:5000*seq_t[1]]
vf_df <- ecm_calc(actual_t)
rownames(vf_df) <- paste("n_",n[j],sep="")
final_database <- rbind(final_database,vf_df)
for (l in 1:length(seq_t)) {
actual_t <-  df[(5000*seq_t[l]+1):(5000*(seq_t[l]+1))]
vf_df <- ecm_calc(actual_t)
rownames(vf_df) <- paste("n_",n[j],sep="")
final_database <- rbind(final_database,vf_df)
}
}
round(final_database,4)
round(final_database,4)
X = c(100,500,1000)
par(mfrow=c(5,9))
par(mar=c(3,3,3,3))
title = c("\U003B2_0","\U003B2_1","\U003B2_2","\U003B2_3","\U003B1")
for (i in 1:length(t_sim)) {
for (j in 1) {
Y = rbind(final_database[i,j],final_database[i+9,j],final_database[i+18,j])
plot(y= Y, x = X, pch=16,xlab = "Tamaño de muestra",ylab = "Cobertura",xaxt='n',cex.lab=1,ylim=c(0,0.3))
lines(y=Y,x=X,type="b", col="firebrick", lty=2)
axis(4, at=Y,labels=round(Y,digits=3), col.axis="firebrick", cex.axis=0.9, tck=.01)
axis(1,at=c(100,500,1000))
title(paste(title[j],", \U003C4 =", tau_sim[i]))
}
}
for (i in 1:length(t_sim)) {
for (j in 2) {
Y = rbind(final_database[i,j],final_database[i+9,j],final_database[i+18,j])
plot(y= Y, x = X, pch=16,xlab = "Tamaño de muestra",ylab = "Cobertura",xaxt='n',cex.lab=1,ylim=c(0,0.3))
lines(y=Y,x=X,type="b", col="firebrick", lty=2)
axis(4, at=Y,labels=round(Y,digits=3), col.axis="firebrick", cex.axis=0.9, tck=.01)
axis(1,at=c(100,500,1000))
title(paste(title[j],", \U003C4 =", tau_sim[i]))
}
}
for (i in 1:length(t_sim)) {
for (j in 3) {
Y = rbind(final_database[i,j],final_database[i+9,j],final_database[i+18,j])
plot(y= Y, x = X, pch=16,xlab = "Tamaño de muestra",ylab = "Cobertura",xaxt='n',cex.lab=1,ylim=c(0,0.3))
lines(y=Y,x=X,type="b", col="firebrick", lty=2)
axis(4, at=Y,labels=round(Y,digits=3), col.axis="firebrick", cex.axis=0.9, tck=.01)
axis(1,at=c(100,500,1000))
title(paste(title[j],", \U003C4 =", tau_sim[i]))
}
}
for (i in 1:length(t_sim)) {
for (j in 4) {
Y = rbind(final_database[i,j],final_database[i+9,j],final_database[i+18,j])
plot(y= Y, x = X, pch=16,xlab = "Tamaño de muestra",ylab = "Cobertura",xaxt='n',cex.lab=1,ylim=c(0,0.3))
lines(y=Y,x=X,type="b", col="firebrick", lty=2)
axis(4, at=Y,labels=round(Y,digits=3), col.axis="firebrick", cex.axis=0.9, tck=.01)
axis(1,at=c(100,500,1000))
title(paste(title[j],", \U003C4 =", tau_sim[i]))
}
}
for (i in 1:length(t_sim)) {
for (j in 5) {
Y = rbind(final_database[i,j],final_database[i+9,j],final_database[i+18,j])
plot(y= Y, x = X, pch=16,xlab = "Tamaño de muestra",ylab = "Cobertura",xaxt='n',cex.lab=1,ylim=c(0,0.3))
lines(y=Y,x=X,type="b", col="firebrick", lty=2)
axis(4, at=Y,labels=round(Y,digits=3), col.axis="firebrick", cex.axis=0.9, tck=.01)
axis(1,at=c(100,500,1000))
title(paste(title[j],", \U003C4 =", tau_sim[i]))
}
}
round(final_database,4)
round(final_database,4)
X = c(100,500,1000)
par(mfrow=c(5,9))
par(mar=c(3,3,3,3))
title = c("\U003B2_0","\U003B2_1","\U003B2_2","\U003B2_3","\U003B1")
for (i in 1:length(t_sim)) {
for (j in 1) {
Y = rbind(final_database[i,j],final_database[i+9,j],final_database[i+18,j])
plot(y= Y, x = X, pch=16,xlab = "Tamaño de muestra",ylab = "Cobertura",xaxt='n',cex.lab=1,ylim=c(0,1))
lines(y=Y,x=X,type="b", col="firebrick", lty=2)
axis(4, at=Y,labels=round(Y,digits=3), col.axis="firebrick", cex.axis=0.9, tck=.01)
axis(1,at=c(100,500,1000))
title(paste(title[j],", \U003C4 =", tau_sim[i]))
}
}
for (i in 1:length(t_sim)) {
for (j in 2) {
Y = rbind(final_database[i,j],final_database[i+9,j],final_database[i+18,j])
plot(y= Y, x = X, pch=16,xlab = "Tamaño de muestra",ylab = "Cobertura",xaxt='n',cex.lab=1,ylim=c(0,1))
lines(y=Y,x=X,type="b", col="firebrick", lty=2)
axis(4, at=Y,labels=round(Y,digits=3), col.axis="firebrick", cex.axis=0.9, tck=.01)
axis(1,at=c(100,500,1000))
title(paste(title[j],", \U003C4 =", tau_sim[i]))
}
}
for (i in 1:length(t_sim)) {
for (j in 3) {
Y = rbind(final_database[i,j],final_database[i+9,j],final_database[i+18,j])
plot(y= Y, x = X, pch=16,xlab = "Tamaño de muestra",ylab = "Cobertura",xaxt='n',cex.lab=1,ylim=c(0,1))
lines(y=Y,x=X,type="b", col="firebrick", lty=2)
axis(4, at=Y,labels=round(Y,digits=3), col.axis="firebrick", cex.axis=0.9, tck=.01)
axis(1,at=c(100,500,1000))
title(paste(title[j],", \U003C4 =", tau_sim[i]))
}
}
for (i in 1:length(t_sim)) {
for (j in 4) {
Y = rbind(final_database[i,j],final_database[i+9,j],final_database[i+18,j])
plot(y= Y, x = X, pch=16,xlab = "Tamaño de muestra",ylab = "Cobertura",xaxt='n',cex.lab=1,ylim=c(0,1))
lines(y=Y,x=X,type="b", col="firebrick", lty=2)
axis(4, at=Y,labels=round(Y,digits=3), col.axis="firebrick", cex.axis=0.9, tck=.01)
axis(1,at=c(100,500,1000))
title(paste(title[j],", \U003C4 =", tau_sim[i]))
}
}
for (i in 1:length(t_sim)) {
for (j in 5) {
Y = rbind(final_database[i,j],final_database[i+9,j],final_database[i+18,j])
plot(y= Y, x = X, pch=16,xlab = "Tamaño de muestra",ylab = "Cobertura",xaxt='n',cex.lab=1,ylim=c(0,1))
lines(y=Y,x=X,type="b", col="firebrick", lty=2)
axis(4, at=Y,labels=round(Y,digits=3), col.axis="firebrick", cex.axis=0.9, tck=.01)
axis(1,at=c(100,500,1000))
title(paste(title[j],", \U003C4 =", tau_sim[i]))
}
}
for (j in 1:length(n)) {
df <- sim_list[[j]]
actual_t <- df[1:5000*seq_t[1]]
vf_df <- ecm_calc(actual_t)
rownames(vf_df) <- paste("n_",n[j],sep="")
final_database <- rbind(final_database,vf_df)
for (l in 1:length(seq_t)) {
actual_t <-  df[(5000*seq_t[l]+1):(5000*(seq_t[l]+1))]
vf_df <- ecm_calc(actual_t)
rownames(vf_df) <- paste("n_",n[j],sep="")
final_database <- rbind(final_database,vf_df)
}
}
X = c(100,500,1000)
par(mfrow=c(5,9))
par(mar=c(3,3,3,3))
title = c("\U003B2_0","\U003B2_1","\U003B2_2","\U003B2_3","\U003B1")
for (i in 1:length(t_sim)) {
for (j in 1) {
Y = rbind(final_database[i,j],final_database[i+9,j],final_database[i+18,j])
plot(y= Y, x = X, pch=16,xlab = "Tamaño de muestra",ylab = "Cobertura",xaxt='n',cex.lab=1,ylim=c(0,1))
lines(y=Y,x=X,type="b", col="firebrick", lty=2)
axis(4, at=Y,labels=round(Y,digits=3), col.axis="firebrick", cex.axis=0.9, tck=.01)
axis(1,at=c(100,500,1000))
title(paste(title[j],", \U003C4 =", tau_sim[i]))
}
}
for (i in 1:length(t_sim)) {
for (j in 2) {
Y = rbind(final_database[i,j],final_database[i+9,j],final_database[i+18,j])
plot(y= Y, x = X, pch=16,xlab = "Tamaño de muestra",ylab = "Cobertura",xaxt='n',cex.lab=1,ylim=c(0,1))
lines(y=Y,x=X,type="b", col="firebrick", lty=2)
axis(4, at=Y,labels=round(Y,digits=3), col.axis="firebrick", cex.axis=0.9, tck=.01)
axis(1,at=c(100,500,1000))
title(paste(title[j],", \U003C4 =", tau_sim[i]))
}
}
for (i in 1:length(t_sim)) {
for (j in 3) {
Y = rbind(final_database[i,j],final_database[i+9,j],final_database[i+18,j])
plot(y= Y, x = X, pch=16,xlab = "Tamaño de muestra",ylab = "Cobertura",xaxt='n',cex.lab=1,ylim=c(0,1))
lines(y=Y,x=X,type="b", col="firebrick", lty=2)
axis(4, at=Y,labels=round(Y,digits=3), col.axis="firebrick", cex.axis=0.9, tck=.01)
axis(1,at=c(100,500,1000))
title(paste(title[j],", \U003C4 =", tau_sim[i]))
}
}
for (i in 1:length(t_sim)) {
for (j in 4) {
Y = rbind(final_database[i,j],final_database[i+9,j],final_database[i+18,j])
plot(y= Y, x = X, pch=16,xlab = "Tamaño de muestra",ylab = "Cobertura",xaxt='n',cex.lab=1,ylim=c(0,1))
lines(y=Y,x=X,type="b", col="firebrick", lty=2)
axis(4, at=Y,labels=round(Y,digits=3), col.axis="firebrick", cex.axis=0.9, tck=.01)
axis(1,at=c(100,500,1000))
title(paste(title[j],", \U003C4 =", tau_sim[i]))
}
}
for (i in 1:length(t_sim)) {
for (j in 5) {
Y = rbind(final_database[i,j],final_database[i+9,j],final_database[i+18,j])
plot(y= Y, x = X, pch=16,xlab = "Tamaño de muestra",ylab = "Cobertura",xaxt='n',cex.lab=1,ylim=c(0,1))
lines(y=Y,x=X,type="b", col="firebrick", lty=2)
axis(4, at=Y,labels=round(Y,digits=3), col.axis="firebrick", cex.axis=0.9, tck=.01)
axis(1,at=c(100,500,1000))
title(paste(title[j],", \U003C4 =", tau_sim[i]))
}
}
ses_calc <- function(lista) {
ic_contain <- matrix(nrow=0,ncol=5)
for (k in 1:length(lista)) {
little_t <- lista[[k]]
ecm <- (little_t$par - c(betas_sim,alpha_sim))
ic_contain <- rbind(ic_contain,ecm)
}
final_df <- as.matrix(t(colSums(ic_contain)/length(lista)))
return(final_df)
}
final_database <- matrix(nrow=0,ncol=5)
seq_t <- seq(1,8,1);seq_t
for (j in 1:length(n)) {
df <- sim_list[[j]]
actual_t <- df[1:5000*seq_t[1]]
vf_df <- ses_calc(actual_t)
rownames(vf_df) <- paste("n_",n[j],sep="")
final_database <- rbind(final_database,vf_df)
for (l in 1:length(seq_t)) {
actual_t <-  df[(5000*seq_t[l]+1):(5000*(seq_t[l]+1))]
vf_df <- ses_calc(actual_t)
rownames(vf_df) <- paste("n_",n[j],sep="")
final_database <- rbind(final_database,vf_df)
}
}
round(final_database,4)
X = c(100,500,1000)
par(mfrow=c(5,9))
par(mar=c(3,3,3,3))
title = c("\U003B2_0","\U003B2_1","\U003B2_2","\U003B2_3","\U003B1")
for (i in 1:length(t_sim)) {
for (j in 1) {
Y = rbind(final_database[i,j],final_database[i+9,j],final_database[i+18,j])
plot(y= Y, x = X, pch=16,xlab = "Tamaño de muestra",ylab = "Cobertura",xaxt='n',cex.lab=1,ylim=c(-0.1,0.1))
lines(y=Y,x=X,type="b", col="firebrick", lty=2)
axis(4, at=Y,labels=round(Y,digits=3), col.axis="firebrick", cex.axis=0.9, tck=.01)
axis(1,at=c(100,500,1000))
title(paste(title[j],", \U003C4 =", tau_sim[i]))
}
}
for (i in 1:length(t_sim)) {
for (j in 2) {
Y = rbind(final_database[i,j],final_database[i+9,j],final_database[i+18,j])
plot(y= Y, x = X, pch=16,xlab = "Tamaño de muestra",ylab = "Cobertura",xaxt='n',cex.lab=1,ylim=c(-0.1,0.1))
lines(y=Y,x=X,type="b", col="firebrick", lty=2)
axis(4, at=Y,labels=round(Y,digits=3), col.axis="firebrick", cex.axis=0.9, tck=.01)
axis(1,at=c(100,500,1000))
title(paste(title[j],", \U003C4 =", tau_sim[i]))
}
}
for (i in 1:length(t_sim)) {
for (j in 3) {
Y = rbind(final_database[i,j],final_database[i+9,j],final_database[i+18,j])
plot(y= Y, x = X, pch=16,xlab = "Tamaño de muestra",ylab = "Cobertura",xaxt='n',cex.lab=1,ylim=c(-0.1,0.1))
lines(y=Y,x=X,type="b", col="firebrick", lty=2)
axis(4, at=Y,labels=round(Y,digits=3), col.axis="firebrick", cex.axis=0.9, tck=.01)
axis(1,at=c(100,500,1000))
title(paste(title[j],", \U003C4 =", tau_sim[i]))
}
}
for (i in 1:length(t_sim)) {
for (j in 4) {
Y = rbind(final_database[i,j],final_database[i+9,j],final_database[i+18,j])
plot(y= Y, x = X, pch=16,xlab = "Tamaño de muestra",ylab = "Cobertura",xaxt='n',cex.lab=1,ylim=c(-0.1,0.1))
lines(y=Y,x=X,type="b", col="firebrick", lty=2)
axis(4, at=Y,labels=round(Y,digits=3), col.axis="firebrick", cex.axis=0.9, tck=.01)
axis(1,at=c(100,500,1000))
title(paste(title[j],", \U003C4 =", tau_sim[i]))
}
}
for (i in 1:length(t_sim)) {
for (j in 5) {
Y = rbind(final_database[i,j],final_database[i+9,j],final_database[i+18,j])
plot(y= Y, x = X, pch=16,xlab = "Tamaño de muestra",ylab = "Cobertura",xaxt='n',cex.lab=1,ylim=c(-0.1,0.1))
lines(y=Y,x=X,type="b", col="firebrick", lty=2)
axis(4, at=Y,labels=round(Y,digits=3), col.axis="firebrick", cex.axis=0.9, tck=.01)
axis(1,at=c(100,500,1000))
title(paste(title[j],", \U003C4 =", tau_sim[i]))
}
}
